<?xml version="1.0" encoding="UTF-8"?>

<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
        xmlns:pro="http://www.liquibase.org/xml/ns/pro"
        xsi:schemaLocation="
        http://www.liquibase.org/xml/ns/dbchangelog
        http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-latest.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext
        http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd
        http://www.liquibase.org/xml/ns/pro
        http://www.liquibase.org/xml/ns/pro/liquibase-pro-latest.xsd">

    <!-- This change set inserts distinct flight statuses from historical_flight_raw into flight_status table -->
    <changeSet id="put-data-to-flight-status" author="yuzdzhan.ahmed">
        <sql>
            INSERT INTO flight_status (status)
            SELECT DISTINCT flight_status
            FROM historical_flight_raw
            WHERE flight_status IS NOT NULL
            AND flight_status NOT IN (SELECT status FROM flight_status);
        </sql>
    </changeSet>

    <!-- This change set inserts distinct timezones from cities_raw into timezone -->
    <changeSet id="put-data-to-timezone" author="yuzdzhan.ahmed">
        <sql>
            INSERT INTO timezones (timezone)
            SELECT DISTINCT timezone
            FROM cities_raw
            WHERE timezone IS NOT NULL
            AND timezone NOT IN (SELECT timezone FROM timezones);
        </sql>
    </changeSet>

    <!-- This change set migrates unique city_name and timezone combinations from cities_raw to city table -->
    <changeSet id="migrate-data-to-city" author="yuzdzhan.ahmed">
        <sql>
            INSERT INTO cities (city_name, timezone_id, iata_code)
            SELECT cr.city_name, tz.id, cr.iata_code
            FROM cities_raw cr
            JOIN timezones tz ON cr.timezone = tz.timezone
            WHERE cr.city_name IS NOT NULL
            GROUP BY cr.city_name, tz.id, cr.iata_code
            HAVING COUNT(*) = 1;
        </sql>
    </changeSet>

    <changeSet id="migrate-data-to-aircraft-type" author="yuzdzhan.ahmed">
        <sql>
            INSERT INTO aircraft_type (iata_code, type)
            SELECT iata_code, aircraft_name
            FROM aircraft_type_raw
            WHERE iata_code NOT IN (SELECT iata_code FROM aircraft_type) AND iata_code IS NOT NULL AND aircraft_name IS NOT NULL;
        </sql>
    </changeSet>

    <changeSet id="migrate-data-to-airport" author="yuzdzhan.ahmed">
        <sql>
            INSERT INTO airport (airport_name, iata_code, latitude, longitude, city_id)
            SELECT ar.airport_name, ar.iata_code, ar.latitude, ar.longitude, c.id
            FROM airport_raw ar
            LEFT JOIN cities c ON ar.city_iata_code = c.iata_code;
        </sql>
    </changeSet>

    <changeSet id="put-data-to-airline-status" author="yuzdzhan.ahmed">
        <sql>
            INSERT INTO airline_status (status)
            SELECT DISTINCT status
            FROM airline_raw
            WHERE status IS NOT NULL
            AND status NOT IN (SELECT status FROM airline_status);
        </sql>
    </changeSet>

    <changeSet id="migrate-data-to-airline" author="yuzdzhan.ahmed">
        <sql>
            INSERT INTO airline (airline_name, icao_code, iata_code, date_founded, fleet_size, airline_status_id)
            SELECT DISTINCT airline_name, icao_code, iata_code, date_founded, TRY_CAST(fleet_size AS INT), ast.id
            FROM airline_raw
            JOIN airline_status ast ON airline_raw.status = ast.status;
        </sql>
    </changeSet>

    <changeSet id="migrate-data-to-aircraft" author="yuzdzhan.ahmed">
        <sql>
            INSERT INTO aircraft (aircraft_reg, iata_code, aircraft_age, first_flight_date, delivery_date, registration_date, construction_number, plane_owner, airline_iata_code, aircraft_type_id)
            SELECT ar.registration_number, ar.iata_code_short, ar.plane_age,
            ar.first_flight_date,
            ar.delivery_date,
            ar.registration_date,
            ar.construction_number, ar.plane_owner, ar.airline_iata_code, at.id
            FROM airplane_raw ar
            LEFT JOIN aircraft_type at ON ar.iata_code_short = at.iata_code
            WHERE ar.registration_number IS NOT NULL;
        </sql>
    </changeSet>

<!--    <changeSet id="update-NULL-flight-status-to-unknown" author="yuzdzhan.ahmed">-->
<!--        <sql>-->
<!--            UPDATE historical_flight_raw-->
<!--            SET flight_status = 'UNKNOWN'-->
<!--            WHERE flight_status IS NULL;-->
<!--        </sql>-->
<!--    </changeSet>-->

    <changeSet id="update-departure-actual-with-scheduled" author="yuzdzhan.ahmed">
        <sql>
            UPDATE historical_flight_raw
            SET departure_actual = departure_scheduled
            WHERE departure_actual IS NULL
            AND departure_scheduled IS NOT NULL
            AND flight_status = 'LANDED';
        </sql>
    </changeSet>

    <changeSet id="update-arrival-actual-with-scheduled" author="yuzdzhan.ahmed">
        <sql>
            UPDATE historical_flight_raw
            SET arrival_actual = arrival_scheduled
            WHERE arrival_actual IS NULL
            AND arrival_scheduled IS NOT NULL
            AND flight_status = 'LANDED';
        </sql>
    </changeSet>

    <changeSet id="migrate-to-flight-with-status-LANDED" author="yuzdzhan.ahmed">
        <sql>
            INSERT INTO flight (
            flight_date,
            departure_time,
            arrival_time,
            range,
            departure_iata_code,
            arrival_iata_code,
            airline_iata,
            airline_icao,
            aircraft_registration,
            flight_status_id,
            departure_airport_id,
            arrival_airport_id,
            aircraft_id,
            airline_id
            )
            SELECT
            hfr.flight_date,
            hfr.departure_actual AS departure_time,
            hfr.arrival_actual AS arrival_time,
            hfr.range_post_processing AS range,
            hfr.departure_iata AS departure_iata_code,
            hfr.arrival_iata AS arrival_iata_code,
            hfr.airline_iata AS airline_iata,
            hfr.airline_icao AS airline_icao,
            hfr.aircraft_registration AS aircraft_registration,
            (SELECT id FROM flight_status WHERE status = 'LANDED') AS flight_status_id,
            NULL AS departure_airport_id,
            NULL AS arrival_airport_id,
            a.id AS aircraft_id,
            NULL AS airline_id
            FROM dbo.historical_flight_raw hfr
            LEFT JOIN aircraft a ON hfr.aircraft_registration = a.aircraft_reg
            WHERE hfr.flight_status = 'LANDED';
        </sql>
    </changeSet>

    <changeSet id="update-departure-airport-id" author="yuzdzhan.ahmed">
        <sql>
            UPDATE flight
            SET departure_airport_id = airport.id
            FROM flight
            JOIN airport ON flight.departure_iata_code = airport.iata_code
            WHERE flight.departure_airport_id IS NULL;
        </sql>
    </changeSet>

    <changeSet id="update-arrival-airport-id" author="yuzdzhan.ahmed">
        <sql>
            UPDATE flight
            SET arrival_airport_id = airport.id
            FROM flight
            JOIN airport ON flight.arrival_iata_code = airport.iata_code
            WHERE flight.arrival_airport_id IS NULL;
        </sql>
    </changeSet>

    <changeSet id="update-airline-id-with-iata" author="yuzdzhan.ahmed">
        <sql>
            UPDATE flight
            SET airline_id = airline.id
            FROM flight
            JOIN airline ON flight.airline_iata = airline.iata_code
            WHERE flight.airline_id IS NULL;
        </sql>
    </changeSet>

    <changeSet id="update-airline-id-with-icao" author="yuzdzhan.ahmed">
        <sql>
            UPDATE flight
            SET airline_id = airline.id
            FROM flight
            JOIN airline ON flight.airline_icao = airline.icao_code
            WHERE flight.airline_id IS NULL;
        </sql>
    </changeSet>

    <!-- Changeset to insert data with valid numeric values -->
    <changeSet id="valid-numeric-values" author="yuzdzhan.ahmed">
        <sql>
            INSERT INTO airport (latitude, longitude)
            SELECT
                CASE WHEN ISNUMERIC(latitude) = 1 THEN CAST(latitude AS FLOAT) ELSE NULL END,
                CASE WHEN ISNUMERIC(longitude) = 1 THEN CAST(longitude AS FLOAT) ELSE NULL END
            FROM airport;
        </sql>
    </changeSet>

    <changeSet id="update-aircraft-id" author="yuzdzhan.ahmed">
        <sql>
            UPDATE flight
            SET aircraft_id = aircraft.id
            FROM aircraft
            WHERE flight.aircraft_registration = aircraft.aircraft_reg
            AND flight.aircraft_id IS NULL;
        </sql>
    </changeSet>



<!--    <changeSet id="update-airline-id-iata" author="yuzdzhan.ahmed">-->
<!--        <sql>-->
<!--            WITH airline_cte AS (-->
<!--            SELECT id, iata_code-->
<!--            FROM airline-->
<!--            )-->
<!--            UPDATE flight-->
<!--            SET airline_id = airline_cte.id-->
<!--            FROM airline_cte-->
<!--            WHERE flight.airline_iata = airline_cte.iata_code-->
<!--            AND flight.airline_id IS NULL-->
<!--            AND flight.airline_iata IS NOT NULL;-->
<!--        </sql>-->
<!--    </changeSet>-->

<!--    <changeSet id="update-airline-id-icao" author="yuzdzhan.ahmed">-->
<!--        <sql>-->
<!--            WITH airline_cte AS (-->
<!--            SELECT id, icao_code-->
<!--            FROM airline-->
<!--            )-->
<!--            UPDATE flight-->
<!--            SET airline_id = airline_cte.id-->
<!--            FROM airline_cte-->
<!--            WHERE flight.airline_icao = airline_cte.icao_code-->
<!--            AND flight.airline_id IS NULL-->
<!--            AND flight.airline_icao IS NOT NULL;-->
<!--        </sql>-->
<!--    </changeSet>-->

<!--    <changeSet id="hard-release-lock" author="yuzdzhan.ahmed">-->
<!--        <sql>-->
<!--            DELETE FROM DATABASECHANGELOGLOCK WHERE ID=1;-->
<!--        </sql>-->
<!--    </changeSet>-->

</databaseChangeLog>